import React from 'react';
import { Router, MemoryRouter } from 'react-router-dom'
import { render, fireEvent, getByTestId, screen, cleanup } from '@testing-library/react';
import SearchPage from './SearchPage';
import Theme from '../../styles/theme';
import App from '../../components/App/App';
import { createMemoryHistory } from 'history';
import '@testing-library/jest-dom/extend-expect';
import { DEFAULT_SUBREDDIT, DEFAULT_PATH } from '../../config';
import user from '@testing-library/user-event';

let app = null;
let container = null;

/* beforeEach(() => {
  app = render(
    <MemoryRouter>
      <Theme>
        <App />
      </Theme>
    </MemoryRouter>
  );
  container = app.container;
});
afterEach(() => {
  cleanup();
  app.remove();
  app = null;
}); */




/* const renderHomePage = () => render(
  <MemoryRouter>
    <Theme>
      <App />
    </Theme>
  </MemoryRouter>,
); */
test('Search input value is set to default value', () => {
  const homePage = app;
  const searchInput = homePage.getByTestId('search-input');
  expect(searchInput.value).toBe(DEFAULT_SUBREDDIT);
});

test('Search input is set to default', () => {
  const homePage = app;
  const searchLink = homePage.getByTestId('navbar-0');
  user.click(searchLink);
  const searchInput = homePage.getByTestId('search-input');
  expect(searchInput.value).toBe(DEFAULT_SUBREDDIT);
});
/* test('User can change search input', () => {
  const homePage = renderHomePage();
  const searchLink = homePage.getByTestId('navbar-0');
  user.click(searchLink);
  const searchInput = homePage.getByTestId('search-input');
  // Simulating an onChange event instead of using typing simulation
  fireEvent.change(searchInput, { target: { value: 'learnprogramming' } });
  expect(searchInput.value).toBe('learnprogramming');
});
 */
